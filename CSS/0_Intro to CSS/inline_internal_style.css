/* univeral selector */
* {
	border: 1px solid red;
  }

  /* type selector */
p {
	color: green;
  }

h1 {
  color: maroon;
}

/* class selector */
.title {
	color: teal;
  }

  /* product of multiple class selector (<p class="title uppercase">) */
.uppercase {
	text-transform: uppercase;
  }

/* id selector */
article-title {
	font-family: cursive;
  }

/* Attribute selector */
a[href*="florence"] {
	color: lightgreen;
  }
  
a[href*="beijing"] {
	color: lightblue;
  }
  
a[href*="seoul"] {
	color: lightpink;
  }

/* Pseudo- class selector :focus, (:focus, :visited, :disabled, and :active) are all pseudo-classes */
a:hover{
	color: darkorange;
  }

/* Class and ID difference */
.heading-background {
	background-color: aqua;
  }
  
  #publish-time {
	color: gray
  }

  /* Specificity (ID , Class then Type - the code on the id selector would be displaced) */
  h5 {
	color: yellow;
  }
  
  .author-class {
	color: pink;
  }
  
  #author-id {
	color: cornflowerblue;
  }

  /* Chaining  (combined type and class selector*/
  h2.destination {
	font-family: Tahoma;
  }
  
/* Descendant combinator */
div.description h5 {
	color: blueviolet;
  }
      /* OR */
	  div.description h5 {
		color: blueviolet;
	  } 
	  /* Chaining & Specificity */
	  ul li h4 {
		color: gold;
	  }

/* Multiple Selector */
h5, h4, li {
	font-family: monospace;
  }


/*
Other Common Pseudo-Classes:
:hover

Applied when the user hovers over an element (e.g., with a mouse). Useful for changing styles on hover to indicate interactivity.
Example:
*/
a:hover {
  color: blue;
}

/*
:focus

Applied when an element gains focus, such as when a user clicks into an input field or uses the keyboard to navigate to it.
Example:
*/
input:focus {
  border-color: green;
}


/*
:visited

Applied to links that the user has already clicked on.
Example:
*/
a:visited {
  color: purple;
}
/*
:disabled

Applied to form elements that are disabled.
Example:
*/
button:disabled {
  background-color: gray;
}
/*
These pseudo-classes are helpful for providing dynamic styling and user feedback during different states of interaction with elements.
*/