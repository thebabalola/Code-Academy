/*		---FUNCTIONS IN CSS ----
in CSS we have access to a wide variety of predefined functions, which allow for expansive page styling.

syntax: 
h1 {
  property: function-name(argument);
} 

Functions are a type of CSS value that is inserted in the place of a hardcoded value of a CSS declaration. 
Some functions can even take multiple arguments, generally each of which must be separated by a comma.

Here’s a quick summary of each of these CSS functions:
1. `calc(): - Used for mathematical calculations directly in CSS (e.g., `width: calc(100% - 50px);`).
  			 - Combines units dynamically, useful for responsive designs.

2. `min()`, `max()`, and `clamp()`
   - `min(value1, value2, ...)`: Takes the smallest of given values (e.g., `min(50%, 300px)`).
   - `max(value1, value2, ...)`: Takes the largest of given values (e.g., `max(20vw, 200px)`).
   - `clamp(min, preferred, max)`: Defines a responsive range, limiting the value to stay between 
   									a minimum and maximum (e.g., `clamp(1rem, 2vw + 1rem, 3rem)`).

3. Color Functions
   -`rgb(r, g, b)`: Defines colors using red, green, and blue values (0-255 each).
   -`rgba(r, g, b, a)`: Adds an alpha (transparency) channel to `rgb` (0 is fully transparent, 1 is fully opaque).
   -`hsl(hue, saturation, lightness)`: Defines colors by hue (0-360°), saturation (0-100%), and lightness (0-100%).
   -`hsla(hue, saturation, lightness, alpha)`: Adds an alpha (transparency) channel to `hsl`.

4. Filter and Backdrop-Filter Functions
   - `brightness(value)`: Adjusts brightness (e.g., `brightness(0.5)` for 50% brightness, anything ounder 0 = darkness).
   - `blur(value)`: Applies a blur effect (e.g., `blur(5px)`).
   - `drop-shadow(offset-x, offset-y, blur-radius, color)`: Adds a shadow to an element’s image or video content.
   - `backdrop-filter()`: Applies filters (e.g., blur, brightness) to the background behind an element (e.g., `backdrop-filter: blur(10px);`), often used on semi-transparent overlays.

5. Transform Function: - Applies transformations like scaling, rotating, or moving elements in 2D or 3D space.
   - Common examples: Scale(1.5), rotate(deg), translate(x, y)

*/


* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
  }
  
  html {
	font-size: 10px;
  }
  
  a {
	text-decoration: none;
	color: inherit; 
  }
  
  body {
	font-family: 'Helvetica', 'sans-serif';
	font-size: 1.6rem;
	color: #333;
	width: 100%;
	height: 100vh;
	display: flex; 
	align-items: center;
	justify-content: center; 
	padding: 0 1.5rem;
	display: flex; 
	align-items: center;
	justify-content: center; 
	padding: 0 1.5rem;
	margin-top:20px;
	margin-bottom:10px;
  }
  
  .main-bg-image {
	width: 100%;
	height: 110%;
	position: absolute;
	top: 0;
	left: 0;
	background: url(https://static-assets.codecademy.com/Courses/Learn-CSS/Functions/main-bg-image.jpg) no-repeat;
	background-size: cover;    
  }
  
  .card {
	padding-top: 5%;
	display: flex;
	flex-direction: column;
	background: #fff;
	box-shadow: 2px .8rem 1rem rgba(0, 0, 0, .09);
	border-radius: 8px 8px 0px 0px;
  }
  
  .under {
	letter-spacing: 0px;
  }
  
  .image-info {
	  height: 25rem;
	  position: relative;
	  z-index: 1;
	  overflow: hidden;
  }
  
  .bg-image {
	width: 100%;
	height: 110%;
	position: absolute;
	top: 0;
	left: 0;
	background-color: gray;

	/* background-image: url(https/agentina-country-iages-of-Beuros-Aires.com); */
	background-image: url(images/argentina.jpg);	/*Setting a Background Image (This function is used to link to external resources and load them into the stylesheet)*/
	background-position: center;
	background-size: cover;

	z-index: -1;
	transition: transform 1s;
	border-radius: 8px 8px 0px 0px;
  }
  
  .location-details {
	width: 100%;
	height: 100%;
	font-size: 1.6rem;
	font-weight: bold;
	color: #FFF;
	position: relative;
	top: 0;
	left: 0;
	letter-spacing: 2px;
	border-radius: 8px 8px 0px 0px;
	background: rgba(209, 207, 63, 0.3); /*red green blue alpha*/
  }
  
  .location-details i{
	margin-right: 2rem;
  }
  
  .send-to {
	display: inline-block;
	margin-top: 2rem;
  }
  .from {
	display: block;
	margin-bottom: 1rem;
	margin-top: 1rem;
  }
  
  .date {
	display: block;
  }
  
  .card-body {
	/* background: #fff; */
	background: rgb(255, 247, 255); /*red green blue*/
	padding: 2rem 3rem;
	position: relative;
  }
  
  .card-body::before,
  .card-body::after {
	content: '';
	position: absolute;
	border: 2px solid;
  }
  
  .card-body::before {
	top: 1.2rem;
	bottom: 1.2rem;
	right: 1.2rem;
  }
  
  .card-body::before {
	bottom: 1.2rem;
	left: 1.2rem;
	top: 1.2rem;
  }
	
  
  .card-body::after {
	top: 1.2rem;
	left: 1.2rem;
	right: 1.2rem;
  }
  
  .card-body::after {
	top: 1.2rem;
	left: 1.2rem;
	bottom: 1.2rem;
  }
  
  .card-title {
	padding: 5px 0;
	/* font-size: 3rem; */
	font-size: calc(2vw + 1.5rem);	/*creates a responsive font size that adjusts with the viewport width while maintaining a minimum base size of 1.5rem for readability.*/
	line-height: 1;
	text-align: center;
	margin-bottom: .5em;
	position: relative;
	z-index: 1;
  }
  
  .header-modifier {
	color:#6CACE4;
	transition: transform .8s ease-in-out;
  }
  
  .card-text {
	position: relative;
	text-align: center;
	width: 80%;
	border-radius: 8px;
	padding: 5px 0;
	overflow-y: hidden;
  }
  
  ul.activities {
	align-items: center;
	list-style: circle;
	position: relative;
	font-weight: bold;
	margin: .5rem 2rem
  }
  
  
  li {
	padding: 5px 0;  
  }
  
  .activities a:hover{
	cursor: pointer;
  }
  
  
  .photo-link{
	text-align: right;
	font-weight: bold;
	margin-top: 1rem;
  }
  
  .photo-link a {
	color: rgba(236, 217, 203, 0.9);
	position: relative;
  }
  
  